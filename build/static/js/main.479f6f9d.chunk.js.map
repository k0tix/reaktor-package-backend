{"version":3,"sources":["components/Dependencies.js","components/Package.js","components/SearchBar.js","services/packages.js","components/PackageLink.js","components/PackageList.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","padding","spacing","chip","margin","paper","overflow","maxHeight","Dependencies","pkgs","dependencies","setSelected","color","classes","className","Paper","map","dependency","Chip","key","label","onClick","undefined","find","p","name","Package","selected","Card","style","maxWidth","CardContent","Typography","gutterBottom","variant","component","whiteSpace","description","length","reverseDependencies","alternatives","SearchBar","filter","setFilter","TextField","id","value","onChange","event","target","getAll","a","axios","get","response","data","PackageLink","pkg","ListItem","button","ListItemText","primary","PackageList","List","aria-label","height","includes","App","useState","setPkgs","useEffect","console","log","packageService","then","sort","b","localeCompare","Grid","container","justify","item","xs","md","Divider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.479f6f9d.chunk.js","sourcesContent":["import React from 'react'\nimport { Paper, Chip, makeStyles } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        padding: theme.spacing(0.5),\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n    paper: {\n        overflow: 'auto',\n        maxHeight: '200px'\n    }\n}))\n\nconst Dependencies = ({ pkgs, dependencies, setSelected, color }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                {dependencies.map(dependency => {\n                    return (\n                        <Chip\n                            key={dependency}\n                            label={dependency}\n                            className={classes.chip}\n                            onClick={setSelected !== undefined ? () => setSelected(pkgs.find(p => p.name === dependency)) : undefined}\n                            color={color}\n                        />\n                    )\n                })}\n            </Paper>\n        </div>\n    )\n}\n\nDependencies.propTypes = {\n    pkgs: PropTypes.array,\n    dependencies: PropTypes.array,\n    setSelected: PropTypes.func,\n    color: PropTypes.string\n}\n\nexport default Dependencies","import React from 'react'\nimport { Card, CardContent, Typography } from '@material-ui/core'\nimport Dependencies from './Dependencies'\nimport PropTypes from 'prop-types'\n\nconst Package = ({ pkgs, selected, setSelected }) => {\n    return (\n        selected.name !== undefined ?\n            <Card style={{ maxWidth: '96em' }}>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {selected.name}\n                    </Typography>\n                    <Typography color=\"textPrimary\">\n                        description\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{ whiteSpace: 'pre-wrap' }}>\n                        {selected.description}\n                    </Typography>\n                    <br />\n\n                    {selected.dependencies.length > 0 ?\n                        <div>\n                            <Typography variant=\"body1\" color=\"textPrimary\" component=\"h2\">\n                            Dependencies\n                            </Typography>\n                            <Dependencies pkgs={pkgs} dependencies={selected.dependencies} setSelected={setSelected} color={'primary'} />\n                        </div>\n                        : <Typography variant=\"body1\" color=\"textPrimary\" component=\"h2\">\n                            No dependencies :)\n                        </Typography>}\n                    <br />\n\n                    {selected.reverseDependencies.length > 0 ?\n                        <div>\n                            <Typography variant=\"body1\" color=\"textPrimary\" component=\"h2\">\n                                Reverse dependencies\n                            </Typography>\n                            <Dependencies pkgs={pkgs} dependencies={selected.reverseDependencies} setSelected={setSelected} color={'secondary'} />\n                        </div>\n                        : <Typography variant=\"body1\" color=\"textPrimary\" component=\"h2\">\n                            No reverse dependencies :(\n                        </Typography>\n                    }\n\n                    <br />\n                    {selected.alternatives.length > 0 ?\n                        <div>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h2\">\n                                Alternative dependencies\n                            </Typography>\n                            <Dependencies pkgs={pkgs} dependencies={selected.alternatives} color={'default'} />\n                        </div>\n                        : ''\n                    }\n                </CardContent>\n            </Card>\n            :\n            <Card>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    No package selected\n                    </Typography>\n                </CardContent>\n            </Card>\n    )\n}\n\nPackage.propTypes = {\n    pkgs: PropTypes.array,\n    selected: PropTypes.object,\n    setSelected: PropTypes.func\n}\n\nexport default Package","import React from 'react'\nimport { TextField } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst SearchBar = ({ filter, setFilter }) => {\n    const handleInputChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    return (\n        <TextField id=\"standard-basic\" label=\"Search packages\" value={filter} onChange={handleInputChange} style={{ margin: '1em' }} />\n    )\n}\n\nSearchBar.propTypes = {\n    filter: PropTypes.string,\n    setFilter: PropTypes.func\n}\n\nexport default SearchBar","import axios from 'axios'\nconst baseUrl = '/api/packages'\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nexport default { getAll }","import React from 'react'\nimport { ListItem, ListItemText } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst PackageLink = ({ pkg, setSelected }) => {\n    return (\n        <ListItem button key={pkg.name} onClick={() => setSelected(pkg)}>\n            <ListItemText primary={pkg.name} />\n        </ListItem>\n    )\n}\n\nPackageLink.propTypes = {\n    pkg: PropTypes.object,\n    setSelected: PropTypes.func\n}\n\nexport default PackageLink","import React from 'react'\nimport { List } from '@material-ui/core'\nimport PackageLink from './PackageLink'\nimport PropTypes from 'prop-types'\n\nconst PackageList = ({ pkgs, filter, setSelected }) => {\n    return (\n        <List component=\"nav\" aria-label=\"main mailbox folders\" style={{ overflow: 'auto', height: '500px' }}>\n            {\n                pkgs.filter((pkg) => pkg.name.includes(filter))\n                    .map((pkg) => (\n                        <PackageLink pkg={pkg} setSelected={setSelected} key={pkg.name} />\n                    ))\n            }\n        </List >\n    )\n}\n\nPackageList.propTypes = {\n    pkgs: PropTypes.array,\n    filter: PropTypes.string,\n    setSelected: PropTypes.func\n}\n\nexport default PackageList","import React, { useState, useEffect } from 'react'\nimport { Grid, Paper, Divider } from '@material-ui/core'\nimport Package from './components/Package'\nimport SearchBar from './components/SearchBar'\nimport packageService from './services/packages'\nimport PackageList from './components/PackageList'\n\nconst App = () => {\n    const [pkgs, setPkgs] = useState([])\n    const [filter, setFilter] = useState('')\n    const [selected, setSelected] = useState({})\n\n    useEffect(() => {\n        console.log('Set packages')\n        packageService.getAll().then(response => {\n            setPkgs(response.sort((a, b) =>  a.name.localeCompare(b.name)))\n        })\n    }, [])\n\n    return (\n        <div>\n            <Grid container justify=\"center\" spacing={2}>\n                <Grid item xs={12} md={8}>\n                    <Package pkgs={pkgs} selected={selected} setSelected={setSelected} />\n                </Grid>\n                <Grid item xs={12} md={7}>\n                    <Paper>\n                        <SearchBar filter={filter} setFilter={setFilter} />\n                        <Divider />\n                        <PackageList pkgs={pkgs} filter={filter} setSelected={setSelected}/>\n                    </Paper>\n\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}