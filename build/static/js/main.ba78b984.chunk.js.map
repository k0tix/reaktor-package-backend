{"version":3,"sources":["components/Dependencies.js","components/Package.js","components/SearchBar.js","services/packages.js","components/PackageLink.js","components/PackageList.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","padding","spacing","chip","margin","Dependencies","pkgs","dependencies","setSelected","color","classes","className","Paper","style","overflow","maxHeight","map","dependency","Chip","key","label","onClick","undefined","find","p","name","Package","selected","Card","position","maxWidth","CardContent","Typography","gutterBottom","variant","component","description","length","reverseDependencies","alternatives","CardActions","SearchBar","filter","setFilter","TextField","id","value","onChange","event","target","getAll","a","axios","get","response","data","PackageLink","pkg","ListItem","button","ListItemText","primary","PackageList","List","aria-label","includes","App","useState","setPkgs","useEffect","console","log","packageService","then","sort","b","localeCompare","Grid","container","item","xs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba78b984.chunk.js","sourcesContent":["import React from 'react'\nimport { Paper, Chip, makeStyles } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        padding: theme.spacing(0.5),\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}))\n\nconst Dependencies = ({ pkgs, dependencies, setSelected, color }) => {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Paper>\n                <div style={{ overflow: 'auto', maxHeight: '200px' }}>\n                    {dependencies.map(dependency => {\n                        return (\n                            <Chip\n                                key={dependency}\n                                label={dependency}\n                                className={classes.chip}\n                                onClick={setSelected !== undefined ? () => setSelected(pkgs.find(p => p.name === dependency)) : undefined}\n                                color={color}\n                            />\n                        )\n                    })}\n                </div>\n            </Paper>\n        </div>\n    )\n}\n\nDependencies.propTypes = {\n    pkgs: PropTypes.array,\n    dependencies: PropTypes.array,\n    setSelected: PropTypes.func,\n    color: PropTypes.string\n}\n\nexport default Dependencies","import React from 'react'\nimport { Card, CardContent, Typography, CardActions } from '@material-ui/core'\nimport Dependencies from './Dependencies'\nimport PropTypes from 'prop-types'\n\nconst Package = ({ pkgs, selected, setSelected }) => {\n    return (\n        selected.name !== undefined ?\n            <Card style={{ position: 'fixed', maxWidth: '96em' }}>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                        {selected.name}\n                    </Typography>\n                    <Typography color=\"textSecondary\">\n                        description\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {selected.description}\n                    </Typography>\n                    <br />\n\n                    {selected.dependencies.length > 0 ?\n                        <div>\n                            <Typography variant=\"body1\" color=\"textPrimary\" component=\"h2\">\n                            Dependencies\n                            </Typography>\n                            <Dependencies pkgs={pkgs} dependencies={selected.dependencies} setSelected={setSelected} color={'primary'} />\n                        </div>\n                        : <Typography variant=\"body2\" color=\"textPrimary\" component=\"h2\">\n                            No dependencies :)\n                        </Typography>}\n                    <br />\n\n                    {selected.reverseDependencies.length > 0 ?\n                        <div>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h2\">\n                                Reverse dependencies\n                            </Typography>\n                            <Dependencies pkgs={pkgs} dependencies={selected.reverseDependencies} setSelected={setSelected} color={'secondary'} />\n                        </div>\n                        : <Typography variant=\"body2\" color=\"textPrimary\" component=\"h2\">\n                            No reverse dependencies :(\n                        </Typography>\n                    }\n\n                    <br />\n                    {selected.alternatives.length > 0 ?\n                        <div>\n                            <Typography variant=\"body2\" color=\"textPrimary\" component=\"h2\">\n                                Alternative dependencies\n                            </Typography>\n                            <Dependencies pkgs={pkgs} dependencies={selected.alternatives} color={'default'} />\n                        </div>\n                        : ''\n                    }\n                </CardContent>\n                <CardActions>\n\n                </CardActions>\n            </Card>\n            :\n            <Card style={{ position: 'fixed' }}>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    No package selected\n                    </Typography>\n                </CardContent>\n            </Card>\n    )\n}\n\nPackage.propTypes = {\n    pkgs: PropTypes.array,\n    selected: PropTypes.object,\n    setSelected: PropTypes.func\n}\n\nexport default Package","import React from 'react'\nimport { TextField } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst SearchBar = ({ filter, setFilter }) => {\n    const handleInputChange = (event) => {\n        setFilter(event.target.value)\n    }\n\n    return (\n        <TextField id=\"standard-basic\" label=\"Search packages\" value={filter} onChange={handleInputChange} />\n    )\n}\n\nSearchBar.propTypes = {\n    filter: PropTypes.string,\n    setFilter: PropTypes.func\n}\n\nexport default SearchBar","import axios from 'axios'\nconst baseUrl = '/api/packages'\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nexport default { getAll }","import React from 'react'\nimport { ListItem, ListItemText } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nconst PackageLink = ({ pkg, setSelected }) => {\n    return (\n        <ListItem button key={pkg.name} onClick={() => setSelected(pkg)}>\n            <ListItemText primary={pkg.name} />\n        </ListItem>\n    )\n}\n\nPackageLink.propTypes = {\n    pkg: PropTypes.object,\n    setSelected: PropTypes.func\n}\n\nexport default PackageLink","import React from 'react'\nimport { List } from '@material-ui/core'\nimport PackageLink from './PackageLink'\nimport PropTypes from 'prop-types'\n\nconst PackageList = ({ pkgs, filter, setSelected }) => {\n    return (\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n            {\n                pkgs.filter((pkg) => pkg.name.includes(filter))\n                    .map((pkg) => (\n                        <PackageLink pkg={pkg} setSelected={setSelected} key={pkg.name} />\n                    ))}\n        </List >\n    )\n}\n\nPackageList.propTypes = {\n    pkgs: PropTypes.array,\n    filter: PropTypes.string,\n    setSelected: PropTypes.func\n}\n\nexport default PackageList","import React, { useState, useEffect } from 'react'\nimport { Grid } from '@material-ui/core'\nimport Package from './components/Package'\nimport SearchBar from './components/SearchBar'\nimport packageService from './services/packages'\nimport PackageList from './components/PackageList'\n\nconst App = () => {\n    const [pkgs, setPkgs] = useState([])\n    const [filter, setFilter] = useState('')\n    const [selected, setSelected] = useState({})\n\n    useEffect(() => {\n        console.log('Set packages')\n        packageService.getAll().then(response => {\n            setPkgs(response.sort((a, b) =>  a.name.localeCompare(b.name)))\n        })\n    }, [])\n\n    return (\n        <div>\n            <Grid container spacing={3}>\n                <Grid item xs={2}>\n                    <SearchBar filter={filter} setFilter={setFilter}/>\n                    <PackageList pkgs={pkgs} filter={filter} setSelected={setSelected}/>\n                </Grid>\n                <Grid item xs={8}>\n                    <Package pkgs={pkgs} selected={selected} setSelected={setSelected}/>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}